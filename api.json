{
  "openapi": "3.0.1",
  "info": {
    "title": "API TV Series",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost/api"
    }
  ],
  "paths": {
    "/employee": {
      "get": {
        "summary": "List all employees",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        }
      },
      "post":{
        "summary": "Add a new employee",
        "requestBody":{
          "content": {
            "application/json":{
              "schema":{
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "employee created"
          }
        }
      }
    },
    "/employee/{id}":{
      "get":{
        "summary": "Find employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of employee",
            "required": true,
            "schema":{
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "put": {
        "summary": "Update employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of employee",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "delete":{
        "summary": "Delete employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of employee",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      }
    },
    "/actor": {
      "get": {
        "summary": "List all actors",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema":{
              "$ref": "#/components/schemas/Actor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Actor"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new actor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Actor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "actor created"
          }
        }
      }
    },
    "/actor/{id}": {
      "get": {
        "summary": "Find actor by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of actor",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Actor"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Actor not found"
          }
        }
      },
      "put": {
        "summary": "Update actor by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of actor",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Actor"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Actor not found"
          }
        }
      },
      "delete": {
        "summary": "Delete actor by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of actor",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Actor not found"
          }
        }
      }
    },
    "/actor/{id}/contract": {
      "get":{
        "summary": "Find actor contracts by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of actor",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ActorContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema":{
                  "type": "array",
                  "items":{
                    "$ref":  "#/components/schemas/ActorContract"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Actor not found"
          }
        }
      }
    },
    "/contract/actor": {
      "get": {
        "summary": "List all actor contracts",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ActorContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorContract"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new actor contract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActorContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "actor contract created"
          }
        }
      }
    },
    "/contract/actor/{id}":{
      "get": {
        "summary": "Find actor contract by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of contract",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorContract"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Actor contract not found"
          }
        }
      },
      "put": {
        "summary": "Update actor contract by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of actor contract",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorContract"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Actor contract not found"
          }
        }
      },
      "delete": {
        "summary": "Delete actor contract by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of actor contract",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Actor contract not found"
          }
        }
      }
    },
    "/contract/director": {
      "get": {
        "summary": "List all director contracts",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DirectorContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DirectorContract"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new director contract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectorContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "director contract created"
          }
        }
      }
    },
    "/contract/director/{id}": {
      "get": {
        "summary": "Find director contract by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of contract",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectorContract"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Director contract not found"
          }
        }
      },
      "put": {
        "summary": "Update director contract by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of director contract",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectorContract"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Director contract not found"
          }
        }
      },
      "delete": {
        "summary": "Delete director contract by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of director contract",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Director contract not found"
          }
        }
      }
    },
    "/director":{
      "get": {
        "summary": "List all directors",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Director"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Director"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new director",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Director"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "director created"
          }
        }
      }
    },
    "/director/{id}":{
      "get": {
        "summary": "Find director by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of director",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Director"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Director not found"
          }
        }
      },
      "put": {
        "summary": "Update director by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of director",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Director"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Director not found"
          }
        }
      },
      "delete": {
        "summary": "Delete director by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of director",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Director not found"
          }
        }
      }
    },
    "/director/{id}/contract": {
      "get": {
        "summary": "Find director contract by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of contract",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DirectorContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectorContract"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Director contract not found"
          }
        }
      },
      "put": {
        "summary": "Update director contract by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of director contract",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectorContract"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Director contract not found"
          }
        }
      },
      "delete": {
        "summary": "Delete director contract by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of director contract",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Director contract not found"
          }
        }
      }
    },
    "/tvseries": {
      "get": {
        "summary": "List all TV series",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TvSeries"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TvSeries"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new TV series",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TvSeries"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "TV series created"
          }
        }
      }
    },
    "/tvseries/{id}":{
      "get": {
        "summary": "Find TV series by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of TV series",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TvSeries"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "TV series not found"
          }
        }
      },
      "put": {
        "summary": "Update TV series by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of TV series",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TvSeries"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "TV series not found"
          }
        }
      },
      "delete": {
        "summary": "Delete TV series by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of TV series",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "TV series not found"
          }
        }
      }
    },
    "/tvseries/{id}/episode":{
      "get": {
        "summary": "List all episodes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of TV series",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Episode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Episode"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new episode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of TV series",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Episode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Episode created"
          }
        }
      }
    },
    "/episode":{
      "get": {
        "summary": "List all episodes",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Episode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Episode"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new episode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Episode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Episode created"
          }
        }
      }
    },
    "/episode/{id}":{
      "get": {
        "summary": "Find episode by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of episode",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Episode"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "episode not found"
          }
        }
      },
      "put": {
        "summary": "Update episode by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of episode",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Episode"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Episode not found"
          }
        }
      },
      "delete": {
        "summary": "Delete TV episode ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of episode",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Episode not found"
          }
        }
      }
    },
    "/episode/{id}/transmission":{
      "get": {
        "summary": "List all transmissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of episode",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Transmission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transmission"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new transmissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of episode",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transmission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Transmissions created"
          }
        }
      }
    },
    "/transmission":{
      "get": {
        "summary": "List all transmissions",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Search parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Transmission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transmission"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new transmissions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transmission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Transmissions created"
          }
        }
      }
    },
    "/transmission/{id}":{
      "get": {
        "summary": "Find transmission by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transmission",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transmission"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transmission not found"
          }
        }
      },
      "put": {
        "summary": "Update transmission by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transmission",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transmission"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "transmission not found"
          }
        }
      },
      "delete": {
        "summary": "Delete TV transmission ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transmission",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transmission not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name":{
            "type": "string"
          },
          "Address": {
            "type": "string"
          }
        }
      },
      "Actor":{
        "type": "object",
        "required": [
          "employeeId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "pseudonym":{
            "type": "string"
          },
          "categories": {
            "type": "array"
          }
        }
      },
      "Director":{
        "type": "object",
        "required": [
          "employeeId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "pseudonym": {
            "type": "string"
          },
          "categories": {
            "type": "array"
          }
        }
      },
      "ActorContract": {
        "required": [
          "actorId",
          "tvSeriesId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "actorId": {
            "type": "integer",
            "format": "int64"
          },
          "tvSeriesId": {
            "type": "integer",
            "format": "int64"
          },
          "date":{
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DirectorContract": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "directorId": {
            "type": "integer",
            "format": "int64"
          },
          "episodeId": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TvSeries": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "classification":{
            "type": "string"
          },
          "releaseDate":{
            "type": "string",
            "format": "date-time"
          },
          "review": {
            "type": "string"
          }
        }
      },
      "Episode": {
        "type": "object",
        "required": [
          "idTVSeries"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "idTVSeries": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "review": {
            "type": "string"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "duration":{
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Transmission":{
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "episodeId": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "channel": {
            "type": "string"
          }
        }
      }
    }
  }
}